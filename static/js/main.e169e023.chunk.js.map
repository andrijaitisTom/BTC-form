{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["multiplyAndSplit","currAmount","enteredValue","finalAmount","parseFloat","replace","toFixed","Number","toLocaleString","App","state","mounting","currency","usdSelected","eurSelected","gbpSelected","inputValue","showSelect","_isMounted","usdSelectedHandler","currentState","setState","eurSelectedHandler","gbpSelectedHandler","inputHandler","val","test","a","fetch","res","json","data","this","bpi","console","log","getPrices","setInterval","className","src","logo","alt","placeholder","value","onChange","e","target","EUR","rate","code","onClick","USD","GBP","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,MAA0B,iC,eCIzC,SAASA,EAAkBC,EAAYC,GACrC,IACMC,GADSC,WAAWH,EAAWI,QAAQ,KAAM,KAAKH,GAC7BI,QAAQ,GAIpC,OAHyBC,OAAOJ,GAAaK,iB,IA+H/BC,E,4MAtHbC,MAAQ,CACNC,UAAU,EACVC,SAAU,KACVC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,WAAY,GACZC,YAAa,G,EAcjBC,YAAa,E,EAsBbC,mBAAqB,WACnB,IAAIC,EAAe,EAAKV,MAAMG,YAC9B,EAAKQ,SAAS,CAACR,aAAcO,K,EAI/BE,mBAAqB,WACnB,IAAIF,EAAe,EAAKV,MAAMI,YAC9B,EAAKO,SAAS,CAACP,aAAcM,K,EAI/BG,mBAAqB,WACnB,IAAIH,EAAe,EAAKV,MAAMK,YAC9B,EAAKM,SAAS,CAACN,aAAcK,K,EAM/BI,aAAe,SAACC,IAGF,KAARA,GAFO,iDAEUC,KAAKD,KAC1B,EAAKJ,SAAS,CAACL,WAAYS,K,sFAvD3B,8BAAAE,EAAA,sEACoBC,MAAM,oDAAqD,CAC3E,eAAgB,qBAFpB,cACQC,EADR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKEC,KAAKX,SAAS,CAACT,SAAUmB,EAAKE,IAAKtB,UAAU,IAC7CuB,QAAQC,IAAI,UANd,gD,qFAWF,WAAqB,IAAD,OAClBH,KAAKd,YAAa,EACnBc,KAAKI,YACLC,aAAY,YACa,IAApB,EAAKnB,YACN,EAAKkB,cAEN,O,kCAKJ,WACAJ,KAAKd,YAAa,I,oBAsClB,WAAU,IAAD,OAIT,OACE,sBAAKoB,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,wEAGF,8BACIT,KAAKtB,MAAMC,UAAaqB,KAAKtB,MAAME,SACrC,gCACG,sBAAK0B,UAAU,iBAAf,UACA,oBAAIA,UAAU,eAAd,+BACA,uBAAOI,YAAY,WAAWC,MAAOX,KAAKtB,MAAMM,WAAY4B,SAAU,SAAAC,GAAC,OAAI,EAAKrB,aAAaqB,EAAEC,OAAOH,UAChHX,KAAKtB,MAAMI,YAAc,8BAAId,EAAiBgC,KAAKtB,MAAME,SAASmC,IAAIC,KAAMhB,KAAKtB,MAAMM,YAA9D,IAA4EgB,KAAKtB,MAAME,SAASmC,IAAIE,KAApG,IAA0G,+BAAM,wBAAQC,QAASlB,KAAKV,mBAAoBgB,UAAW,qBAAsC,KACpON,KAAKtB,MAAMG,YAAc,8BAAIb,EAAiBgC,KAAKtB,MAAME,SAASuC,IAAIH,KAAMhB,KAAKtB,MAAMM,YAA9D,IAA4EgB,KAAKtB,MAAME,SAASuC,IAAIF,KAApG,IAA0G,+BAAM,wBAAQC,QAASlB,KAAKb,mBAAoBmB,UAAW,qBAAsC,KACpON,KAAKtB,MAAMK,YAAe,8BAAIf,EAAiBgC,KAAKtB,MAAME,SAASwC,IAAIJ,KAAMhB,KAAKtB,MAAMM,YAA9D,IAA4EgB,KAAKtB,MAAME,SAASwC,IAAIH,KAApG,IAA0G,+BAAM,wBAAQC,QAASlB,KAAKT,mBAAoBe,UAAW,qBAAsC,QAG7N,qBAAKA,UAAU,gBAAf,SAEEN,KAAKtB,MAAMG,aAAgBmB,KAAKtB,MAAMK,aAAgBiB,KAAKtB,MAAMI,YAOlE,KAPgF,sBAAKwB,UAAU,WAAf,UACxF,wBAAQA,UAAU,UAAlB,kCACA,sBAAKA,UAAU,mBAAf,UACcN,KAAKtB,MAAMG,YAA8D,KAAhD,mBAAGqC,QAASlB,KAAKb,mBAAjB,mBACzBa,KAAKtB,MAAMK,YAA8D,KAAhD,mBAAGmC,QAASlB,KAAKT,mBAAjB,mBACzBS,KAAKtB,MAAMI,YAA6D,KAA/C,mBAAIoC,QAASlB,KAAKV,mBAAlB,4BAjBe,2D,GAxFtC+B,IAAMC,WCFTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e169e023.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction multiplyAndSplit (currAmount, enteredValue) {\n  const result = parseFloat(currAmount.replace(/,/g, ''))*enteredValue\n  const finalAmount = result.toFixed(2)\n  const stringWithCommas= Number(finalAmount).toLocaleString()\n  \n \n return stringWithCommas\n }\n\n\nclass App extends React.Component {\n\n  state = {\n    mounting: false,\n    currency: null,\n    usdSelected: false,\n    eurSelected: false,\n    gbpSelected: false,\n    inputValue: '',\n    showSelect : true,\n    \n  }\n\n\n  async getPrices(){\n    const res = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\", {\n      'Content-Type': 'application/json'\n    })\n    const data = await res.json()\n    this.setState({currency: data.bpi, mounting: true})\n    console.log('called')\n  }\n  \n_isMounted = false;\n\ncomponentDidMount() {\n  this._isMounted = true;\n this.getPrices()\n setInterval(() => {\n   if(this._isMounted === true ){\n     this.getPrices()\n   }\n }, 60*1000);\n}\n\n\n// componentWill unmount naudoju, kad isvengciau memory leaks\ncomponentWillUnmount() {\nthis._isMounted = false;\n}\n\n\n\n\n\nusdSelectedHandler = () => {\n  let currentState = this.state.usdSelected\n  this.setState({usdSelected: !currentState})\n}\n\n\neurSelectedHandler = () => {\n  let currentState = this.state.eurSelected\n  this.setState({eurSelected: !currentState})\n}\n\n\ngbpSelectedHandler = () => {\n  let currentState = this.state.gbpSelected\n  this.setState({gbpSelected: !currentState})\n}\n\n\n\n\ninputHandler = (val) => {\n  const re = /^(?!0{2,})[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$/;\n\n  if (val === '' || re.test(val)) {\n  this.setState({inputValue: val})\n}}\n\n\n\n\n\nrender() {\n\n\n\nreturn (\n  <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>React form showing current BTC price\n        </p>\n      </header>\n      <div>\n        {!this.state.mounting || !this.state.currency ? <div>Please wait ...</div> : \n        <div>\n           <div className=\"priceContainer\">\n           <h1 className=\"currentPrice\">Current BTC price</h1>\n           <input placeholder=\"0.00 BTC\" value={this.state.inputValue} onChange={e => this.inputHandler(e.target.value)} ></input>\n{this.state.eurSelected ? <p>{multiplyAndSplit(this.state.currency.EUR.rate, this.state.inputValue)} {this.state.currency.EUR.code} <span><button onClick={this.eurSelectedHandler} className={\"cancelOrder\"}></button></span></p> : null }\n{this.state.usdSelected ? <p>{multiplyAndSplit(this.state.currency.USD.rate, this.state.inputValue)} {this.state.currency.USD.code} <span><button onClick={this.usdSelectedHandler} className={\"cancelOrder\"}></button></span></p> : null }\n{this.state.gbpSelected ?  <p>{multiplyAndSplit(this.state.currency.GBP.rate, this.state.inputValue)} {this.state.currency.GBP.code} <span><button onClick={this.gbpSelectedHandler} className={\"cancelOrder\"}></button></span></p> : null }\n\n         </div>\n         <div className=\"fiatContainer\">\n \n         {!this.state.usdSelected || !this.state.gbpSelected || !this.state.eurSelected ? <div className=\"dropdown\">\n  <button className=\"dropbtn\">Select your currency</button>\n  <div className=\"dropdown-content\">\n              {!this.state.usdSelected ? <p onClick={this.usdSelectedHandler}>USD  </p>: null }\n              {!this.state.gbpSelected ? <p onClick={this.gbpSelectedHandler}>GBP  </p>: null }\n              {!this.state.eurSelected ? <p  onClick={this.eurSelectedHandler}>EUR</p>: null }\n  </div>\n </div> : null}\n         </div>\n\n         </div>\n         }\n      </div>\n     \n    </div>\n  );\n}\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}